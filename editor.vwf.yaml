# Copyright 2014 Lockheed Martin Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may 
# not use this file except in compliance with the License. You may obtain 
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and 
# limitations under the License.

# The Mars educational game content Editor created for ADL's True Game-based learning project
--- 
extends: http://vwf.example.com/scene.vwf
properties:
  backgroundColor: [ 10, 20, 30 ]
  ambientColor: [ 255, 255, 255 ]
  activeTool: camera
children:
  graph:
    extends: http://vwf.example.com/graphtool/graph.vwf
    properties:
      graphScale: 3
      gridInterval: 1
      gridLineInterval: 10
      gridLength: 100
      xAxisVisible: true
      yAxisVisible: true
      zAxisVisible: true
      gridVisible: true
      axisOpacity: 1
      gridOpacity: 0.5
      renderTop: false
      tileVisible: true
    children:
      editToolTiles:
        extends: http://vwf.example.com/graphtool/graphgroup.vwf
        properties:
          groupVisible: false
          graphObjects: []
      mapTiles:
        extends: http://vwf.example.com/graphtool/graphgroup.vwf
        properties:
          groupVisible: true
          graphObjects: []
    methods:
      toggleTileVisibility: |
        this.tileVisible = !this.tileVisible;
        for ( var tile in this.children ) {
          this.children[ tile ].visible = this.tileVisible;
        }
  grid:
    extends: source/grid.vwf
    properties:
      minX: 0
      maxX: 100
      minY: 0
      maxY: 100
      gridOriginInSpace: []
      gridSquareLength: 3
      boundaryValues: []
    scripts: |
      this.initialize = function() {
        var xlen = this.maxX - this.minX;
        var ylen = this.maxY - this.minY;
        this.gridOriginInSpace = [
          Math.floor( -xlen / 2 * this.gridSquareLength ),
          Math.floor( -ylen / 2 * this.gridSquareLength )
        ];
        for ( var x = 0; x < this.maxX - this.minX; x++ ) {
          this.boundaryValues.push( new Array() );
          for ( var y = 0; y < this.maxY - this.minY; y++ ) {
            this.boundaryValues[ x ].push( 0 );
          }
        }
      }
  editTool:
    extends: http://vwf.example.com/node3.vwf
    implements: source/griddable.vwf
    properties:
      selectedObjectId: undefined
    children:
      grid:
        extends: source/grid.vwf
        properties:
          minX: 0
          maxX: 1
          minY: 0
          maxY: 1
          gridOriginInSpace: [ 0, 0 ]
          gridSquareLength: 3
          boundaryValues: []
        methods:
          updateGrid:
          moveGridOrigin:
        events:
          gridUpdated:
          gridMoved:
        scripts:
          - source: editor/editTool.js
methods:
  loadMap:
  deleteMap:
  loadObject:
  deleteObject:
  createObject:
  createGridDisplay:
  removeGridDisplay:
  createEditToolGrid:
  removeEditToolGrid:
  drag:
  stopDrag:
  setUpListeners:
  selectObject:
  deselectObject:
  setActiveTool:
  createLevelFromFile:
  # Methods handled by View
  requestDelete:
events:
  onSceneReady:
  pointerOver:
  pointerOut:
  pointerMove:
  pointerDown:
  pointerClick:
  objectCreated:
scripts: 
  - source: editor/scene.js