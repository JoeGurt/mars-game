---
extends: source/scenario/scenario.vwf
properties:
  scenarioName: scenario2

  scenePath: /
  nextScenarioPath: "scenario3"
  blockly: assets/scenario/scenario2.xml

  startState:
  - setProperty:
    - rover
    - battery
    - 50
  - setProperty:
    - rover
    - batteryMax
    - 50
  - setProperty:
    - rover
    - blockly_allowedBlocks
    - 30

  - setSceneProperty:
    - blockly_activeNodeID
    - undefined

  # TODO: Simplify heading/rotation
  # Set initial rotation using heading
  # Currently, moveLeft & moveRight in rover.js
  # fight with adding that to the setter of heading
  - setProperty:
    - rover
    - heading
    - 0
  - setProperty:
    - rover
    - rotation
    - [ 0, 0, 1, 0 ]

  - addToInventory:
    - rover/cargo
    - [ "radio" ]

  - addToGrid:
    - rover
    - [ 15, 1 ]

  - createGraph:

  - addToGrid:
    - blocklyGraph
    - [ 15, 1 ]

children:
  triggerManager:
    extends: source/triggers/triggerManager.vwf
    properties: 
      triggers:
        beginScenario:
          triggerCondition:
          - onScenarioStart:
          actions:
          - playSound:
            - musicStandardGameplay
          - waitForNode:
            - graph
            - blinkBlocklyTab:
              - graph

        playStartingVO:
          triggerCondition:
          - onScenarioStart:
          additionalCondition:
          - not:
            - readBlackboard:
              - Level2StartSounds
          actions:
          - playSound:
            - L2VO1_Control
          - playSound:
            - L2VO2_Rover
          - writeToBlackboard:
            - Level2StartSounds

        failOnMove:
          triggerCondition:
          - onMoved:
            - rover
          actions:
          - hideBlockly:
          - clearBlockly:
          - scenarioFailure:
            - lost
            - "You need to plot the course of the wayward rover before going to find it."

        succeedOnSuccessfulCoursePlot:
          triggerCondition:
          - and:
            - blocklyLineEval:
              - [ 10, -5 ]
            - blocklyLineEval:
              - [ -16, 8 ]
          actions:
          - scenarioSuccess:
            - "Course plotted!  Now to find the little guy."
          - stopSound:
            - musicStandardGameplay
          - playSound:
            - musicSuccess

        stopBlinkGraphTab:
          triggerCondition:
          - or:
            - onBlocklyWindowOpened:
              - graph
            - onScenarioChanged:
          actions:
          - stopBlinkBlocklyTab:
            - graph

        playGraphOpenedVO:
          triggerCondition:
          - onBlocklyWindowOpened:
            - graph
          additionalCondition:
          - not:
            - readBlackboard:
              - Level2GraphOpened
          actions:
          - playSound:
            - L2VO3_Rover
          - writeToBlackboard:
            - Level2GraphOpened

  grid:
    extends: source/grid.vwf
    properties:
      minX: 0
      maxX: 16
      minY: 0
      maxY: 16
      gridOriginInSpace: [ -45, 39 ]
      gridSquareLength: 3
      boundaryValues:
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]